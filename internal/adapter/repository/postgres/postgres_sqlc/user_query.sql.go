// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user_query.sql

package postgres_sqlc

import (
	"context"
)

const listUserTask = `-- name: ListUserTask :many
SELECT wallet_address, amount, point, event_name, create_time, update_time FROM user_task
ORDER BY wallet_address desc
`

// Get user points history for distributed tasks
//
//	SELECT wallet_address, amount, point, event_name, create_time, update_time FROM user_task
//	ORDER BY wallet_address desc
func (q *Queries) ListUserTask(ctx context.Context) ([]UserTask, error) {
	rows, err := q.db.Query(ctx, listUserTask)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []UserTask
	for rows.Next() {
		var i UserTask
		if err := rows.Scan(
			&i.WalletAddress,
			&i.Amount,
			&i.Point,
			&i.EventName,
			&i.CreateTime,
			&i.UpdateTime,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
